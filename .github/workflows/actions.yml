name: build

on:
    push:
        branches:
            - master
            - beta
    pull_request:
        branches:
            - master
            - beta
env:
    YARN_CACHE: 001

jobs:
    test:
        timeout-minutes: 10
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12, 14, 16, 17]
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0 # Required to retrieve git history
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3.0.0
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Cache node modules
              uses: actions/cache@v3
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-build-${{ env.YARN_CACHE }}-${{ hashFiles('**/yarn.lock') }}
            - run: yarn
            - name: Lint files
              run: yarn lint
            - name: Check typing
              run: yarn type-check
            - name: Run tests
              run: yarn test
    release:
        timeout-minutes: 10
        if: github.event_name == 'push'
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0 # Required to retrieve git history
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3.0.0
              with:
                  node-version: 14
            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - name: Cache node modules
              uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-build-${{ env.YARN_CACHE }}-${{ hashFiles('**/yarn.lock') }}
            - run: yarn
            - name: Build assets
              run: yarn build
            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: yarn semantic-release
